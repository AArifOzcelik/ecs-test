name: CI for EaaS Backend OCPP Application

on:
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - ".github/**"

permissions:
  id-token: write
  contents: read

jobs:
  get-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.current_environment.outputs.ENVIRONMENT }}

    steps:
    - uses: actions/checkout@v4

    - name: Get Environment by Branch
      id: current_environment
      run: |
        ENVIRONMENT=${GITHUB_REF##*/}
        if [[ "$ENVIRONMENT" == "master" ]]; then
          ENVIRONMENT="prod"
        fi
        echo ENVIRONMENT=$ENVIRONMENT >> $GITHUB_OUTPUT

  build:
    needs: get-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.get-environment.outputs.environment }}
    env: 
      ENVIRONMENT: ${{ needs.get-environment.outputs.environment }}
    outputs:
      tag: ${{ steps.image_tag.outputs.TAG }}
    strategy:
      matrix:
        include:
            - dockerfile : .Dockerfile
              tag: "${{ needs.get-environment.outputs.environment }}-app"

    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: eu-west-1
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 1200
        role-session-name: eaas-backend-ocpp-app

    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
  
    - name: Generate Image Tag by SHA
      id: image_tag
      run: |
        TAG="${GITHUB_SHA::7}"
        echo TAG=$TAG >> $GITHUB_OUTPUT

    - name: Build and Push to ECR
      run: |
        docker buildx build \
          --file ${{ matrix.dockerfile }} \
          --tag ${{ secrets.ECR_REPOSITORY_URL }}:${{ matrix.tag }}${{ steps.image_tag.outputs.TAG }} \
          --no-cache \
          --push .

  update-image-tag:
    needs: [get-environment, build]
    runs-on: ubuntu-latest
    environment: ${{ needs.get-environment.outputs.environment }}
    env: 
      ENVIRONMENT: ${{ needs.get-environment.outputs.environment }}
      TAG: ${{ needs.build.outputs.tag }}
    
    steps:
    - name: Generate Github App Token for Private Repositories
      id: generate_token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
        owner: ${{ github.repository_owner }}

    - uses: actions/checkout@v4
      with:
        token: ${{ steps.generate_token.outputs.token }}
        
    - name: Update Image Tag by Branch and SHA
      id: update_tag
      run: |
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-processor-${{ env.TAG }}\"/' ./automation/helm/processor/environments/eu-west-1/${{ env.ENVIRONMENT }}-values.yaml
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-api-${{ env.TAG }}\"/' ./automation/helm/api/environments/eu-west-1/${{ env.ENVIRONMENT }}-values.yaml
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-db-cleaner-${{ env.TAG }}\"/' ./automation/helm/db-cleaner/environments/eu-west-1/${{ env.ENVIRONMENT }}-values.yaml
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-db-writer-${{ env.TAG }}\"/' ./automation/helm/db-writer/environments/eu-west-1/${{ env.ENVIRONMENT }}-values.yaml
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-processor-${{ env.TAG }}\"/' ./automation/helm/processor/environments/eu-west-2/${{ env.ENVIRONMENT }}-values.yaml
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-api-${{ env.TAG }}\"/' ./automation/helm/api/environments/eu-west-2/${{ env.ENVIRONMENT }}-values.yaml
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-db-cleaner-${{ env.TAG }}\"/' ./automation/helm/db-cleaner/environments/eu-west-2/${{ env.ENVIRONMENT }}-values.yaml
        sed -i 's/\(tag:[[:space:]]\).*/\1\"${{ env.ENVIRONMENT }}-db-writer-${{ env.TAG }}\"/' ./automation/helm/db-writer/environments/eu-west-2/${{ env.ENVIRONMENT }}-values.yaml
        
        sed -i 's/\(REVISION_ID[[:space:]]=[[:space:]]\).*/\1\"${{ env.TAG }}\"/' ./src/library/revision.py

    - uses: stefanzweifel/git-auto-commit-action@v4
      id: push-commit
      with: 
        commit_message: Update revision id in revision.py and image tag in ${{ env.ENVIRONMENT }}-values.yaml files